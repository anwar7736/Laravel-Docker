version: "3.8"

networks:
  laravel:
    driver: bridge

services:
  php:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile
    container_name: php_container
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - laravel

  mysql:
    image: mysql:latest
    container_name: mysql_container
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel_docker
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: secret
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin_container
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - laravel

  node:
    image: node:latest
    container_name: node_container
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - laravel
    command: ["npm", "install"]  
    
  composer:
    image: composer:latest
    container_name: composer_container
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
    command: ["composer", "install"]

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile
    container_name: artisan_container
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
    entrypoint: ["php", "artisan"]

  
